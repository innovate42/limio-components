import React, { useEffect, useState } from 'react';
import PropTypes from 'prop-types';
import 'reset-css/reset.css';
import '../color/color';
import '../interactions/interactions';
import '../typography/typography';
import classnames from 'classnames';
import css from './notification.css';

const Notification = ({
  text,
  variant,
  notificationId,
  time,
  ...otherProps
}) => {
  const [isVisible, setVisible] = useState(false);
  const [isActive, setActive] = useState(false);

  const fadeDelay = 400;

  useEffect(() => {
    setVisible(true);
    const setVisibleTimeout = setTimeout(() => setVisible(false), time);
    const showActiveTimeout = setTimeout(() => setActive(true), fadeDelay);
    const hideActiveTimeout = setTimeout(
      () => setActive(false),
      time - fadeDelay,
    );
    return () => {
      clearTimeout(setVisibleTimeout);
      clearTimeout(showActiveTimeout);
      clearTimeout(hideActiveTimeout);
    };
  }, [notificationId]);

  if (isVisible && notificationId !== null) {
    return (
      <div
        className={classnames(css['ds-notification'], {
          [css['ds-notification--active']]: isActive,
          [css[`ds-notification--${variant}`]]: variant,
        })}
        {...otherProps}
      >
        <span>{text}</span>
      </div>
    );
  }
  return null;
};

Notification.defaultProps = {
  notificationId: null,
  text: '',
  variant: null,
  time: 7000,
};

Notification.propTypes = {
  notificationId: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number,
    PropTypes.bool,
  ]),
  text: PropTypes.string,
  variant: PropTypes.oneOf(['error', 'success', 'warning']),
  time: PropTypes.number,
};

export default Notification;
