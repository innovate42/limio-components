import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import css from './pagination-item.css';

const PaginationItem = ({
  id,
  value,
  label,
  active,
  disabled,
  edge,
  href,
  onClick,
}) => {
  const container = {};
  const link = { href, onClick };

  // add props to page numbers & ellipsis items
  if (!edge) {
    container.className = classnames(css['ds-pagination__item'], {
      [css['ds-pagination__item--active']]: active,
    });

    // props specific to current page
    if (active) {
      container['aria-current'] = true;
      container['aria-label'] = label;
    }

    // disabled state usually for ellipsis
    if (disabled) {
      container['aria-disabled'] = true;
    }

    // add props to other page numbers
    if (!active && !disabled) {
      link.className = css['ds-pagination__item-link'];
      link['data-value'] = value;
      link['aria-label'] = label;
    }
  }

  // add props to previous/next links items
  if (edge) {
    link.rel = id;
    link.className = css['ds-pagination__nav-link'];
    link['aria-label'] = label;

    // add disabled aria for first and last page
    if (disabled) {
      link['aria-disabled'] = true;
      // remove href to prevent tabbing and touchscreen interaction
      if (link.href) {
        delete link.href;
      }
    }

    container.className = classnames(
      css[`ds-pagination__nav`],
      css[`ds-pagination__nav--${id}`],
      {
        [css[`ds-pagination__nav--disabled`]]: disabled,
      },
    );
  }

  return (
    <li {...container}>
      {!edge && (active || disabled) ? (
        <span aria-hidden>{value}</span>
      ) : (
        <a {...link}>
          <span aria-hidden>{value}</span>
        </a>
      )}
    </li>
  );
};

PaginationItem.defaultProps = {
  active: false,
  disabled: false,
  edge: false,
};

PaginationItem.propTypes = {
  id: PropTypes.string.isRequired,
  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,
  label: PropTypes.string.isRequired,
  active: PropTypes.bool,
  disabled: PropTypes.bool,
  edge: PropTypes.bool,
  href: PropTypes.string.isRequired,
  onClick: PropTypes.func.isRequired,
};

export default PaginationItem;
