/* eslint-disable no-magic-numbers */
import React from 'react';
import { shallow } from 'enzyme';
import PaginationItem from './pagination-item';

describe('<PaginationItem />', () => {
  it('should render active item', () => {
    const props = {
      id: 'page-no-1',
      value: 1,
      label: 'Current page: 1',
      active: true,
      href: '/page=1',
      onClick: () => false,
    };
    const component = shallow(<PaginationItem {...props} />);

    expect(component.find('li').props()).toEqual({
      className: 'ds-pagination__item ds-pagination__item--active',
      'aria-current': true,
      'aria-label': 'Current page: 1',
      children: expect.anything(),
    });
    expect(component.find('a').length).toBe(0);
    expect(component.find('span').props()).toEqual({
      'aria-hidden': true,
      children: 1,
    });
  });

  it('should render item', () => {
    const props = {
      id: 'page-no-1',
      value: 1,
      label: 'Current page: 1',
      href: '/page=1',
      onClick: () => false,
    };
    const component = shallow(<PaginationItem {...props} />);
    expect(component.find('li').props()).toEqual({
      className: 'ds-pagination__item',
      children: expect.anything(),
    });
    expect(component.find('a').props()).toEqual({
      href: '/page=1',
      className: 'ds-pagination__item-link',
      'aria-label': 'Current page: 1',
      'data-value': 1,
      onClick: expect.any(Function),
      children: expect.anything(),
    });
    expect(component.find('span').props()).toEqual({
      'aria-hidden': true,
      children: 1,
    });
  });

  it('should render previous link', () => {
    const props = {
      id: 'previous',
      value: 'Previous',
      label: 'Go to the previous page, 1',
      edge: true,
      href: '/page=1',
      onClick: () => false,
    };
    const component = shallow(<PaginationItem {...props} />);
    expect(component.find('li').props()).toEqual({
      className: 'ds-pagination__nav ds-pagination__nav--previous',
      children: expect.anything(),
    });
    expect(component.find('a').props()).toEqual({
      href: '/page=1',
      rel: 'previous',
      className: 'ds-pagination__nav-link',
      'aria-label': 'Go to the previous page, 1',
      onClick: expect.any(Function),
      children: expect.anything(),
    });
    expect(component.find('span').props()).toEqual({
      'aria-hidden': true,
      children: 'Previous',
    });
  });

  it('should render next link', () => {
    const props = {
      id: 'next',
      value: 'Next',
      label: 'Go to the next page, 10',
      edge: true,
      disabled: true,
      href: '/page=10',
      onClick: () => false,
    };
    const component = shallow(<PaginationItem {...props} />);
    expect(component.find('li').props()).toEqual({
      className:
        'ds-pagination__nav ds-pagination__nav--next ds-pagination__nav--disabled',
      children: expect.anything(),
    });
    expect(component.find('a').props()).toEqual({
      rel: 'next',
      className: 'ds-pagination__nav-link',
      'aria-label': 'Go to the next page, 10',
      'aria-disabled': true,
      onClick: expect.any(Function),
      children: expect.anything(),
    });
    expect(component.find('span').props()).toEqual({
      'aria-hidden': true,
      children: 'Next',
    });
  });
});
