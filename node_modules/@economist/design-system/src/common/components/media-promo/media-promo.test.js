import React from 'react';
import { shallow } from 'enzyme';
import MediaPromo from './media-promo';

describe('<MediaPromo />', () => {
  const title = 'Test title';
  const link = 'www.test.com';
  const linkText = 'Test link description';
  const defaultProps = {
    title,
    linkURL: link,
    linkText,
  };

  it('should apply the correct classname when passed podcast as a prop', () => {
    const component = shallow(
      <MediaPromo {...defaultProps} variant='podcasts' />,
    );

    expect(
      component
        .find('div')
        .first()
        .props().className,
    ).toEqual('ds-media-promo ds-media-promo--podcasts');
  });

  it('should apply the correct classname when passed films as a prop', () => {
    const component = shallow(<MediaPromo {...defaultProps} variant='films' />);

    expect(
      component
        .find('div')
        .first()
        .props().className,
    ).toEqual('ds-media-promo ds-media-promo--films');
  });

  it('should apply the correct classname when passed editorial as a prop', () => {
    const component = shallow(
      <MediaPromo {...defaultProps} variant='editorial' />,
    );

    expect(
      component
        .find('div')
        .first()
        .props().className,
    ).toEqual('ds-media-promo ds-media-promo--editorial');
  });

  it('should render the title', () => {
    const component = shallow(<MediaPromo {...defaultProps} variant='films' />);

    expect(component.find('.ds-media-promo__title').text()).toContain(title);
  });

  it('should render the description', () => {
    const description = 'Test description';
    const component = shallow(
      <MediaPromo
        {...defaultProps}
        description={description}
        variant='films'
      />,
    );

    expect(component.find('.ds-media-promo__description').text()).toContain(
      description,
    );
  });

  it('should render the LinkWithArrowIcon component with the correct style props', () => {
    const component = shallow(<MediaPromo {...defaultProps} variant='films' />);

    expect(component.find('LinkWithArrowIcon').props().heavy).toEqual(true);
    expect(component.find('LinkWithArrowIcon').props().minor).toEqual(true);
  });

  it('should pass the correct link to LinkWithArrowIcon', () => {
    const component = shallow(<MediaPromo {...defaultProps} variant='films' />);

    expect(component.find('LinkWithArrowIcon').props().href).toEqual(link);
  });

  it('should pass the correct link text to LinkWithArrowIcon', () => {
    const component = shallow(<MediaPromo {...defaultProps} variant='films' />);

    expect(component.find('LinkWithArrowIcon').props().text).toEqual(linkText);
  });
});
