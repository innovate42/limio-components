import React from 'react';
import { shallow } from 'enzyme';
import Rule from './rule';

describe('<Rule />', () => {
  it('should render the correct default className', () => {
    const component = shallow(<Rule />);
    expect(component.props().className).toEqual('ds-rule');
  });
  it('should render the correct className with the inverse prop', () => {
    const component = shallow(<Rule inverse />);
    expect(component.hasClass('ds-rule--inverse')).toBe(true);
  });

  ['emphasised', 'heavy', 'accent'].forEach(rule => {
    describe(`rule: ${rule}`, () => {
      it(`should render the correct className`, () => {
        const component = shallow(<Rule rule={rule} />);
        expect(component.hasClass(`ds-rule--${rule}`)).toBe(true);
      });

      it(`should render the correct className also with 'inverse'`, () => {
        const component = shallow(<Rule inverse rule={rule} />);
        expect(component.hasClass(`ds-rule--${rule}`)).toBe(true);
        expect(component.hasClass('ds-rule--inverse')).toBe(true);
      });
    });
  });
});
