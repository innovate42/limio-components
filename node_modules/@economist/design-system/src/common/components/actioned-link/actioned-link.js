import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import 'reset-css/reset.css';
import '../color/color';
import '../grid/grid';
import '../interactions/interactions';
import '../typography/typography';
import css from './actioned-link.css';

const ActionedLink = ({
  as: Component,
  text,
  minor,
  className,
  icon,
  disabled,
  complete,
  toggled,
  ...props
}) => {
  const ActionedLinkTag = Component;

  return (
    <ActionedLinkTag
      className={classnames([
        css['ds-actioned-link'],
        className,
        {
          [css['ds-actioned-link--minor']]: minor,
          [css[`ds-actioned-link--${icon}`]]: icon,
          [css['ds-actioned-link--disabled']]: disabled,
          [css['ds-actioned-link--complete']]: complete,
          [css['ds-actioned-link--toggled']]: toggled,
        },
      ])}
      disabled={disabled}
      {...props}
    >
      <span>{text}</span>
    </ActionedLinkTag>
  );
};

ActionedLink.defaultProps = {
  as: 'a',
  text: '',
  minor: false,
  disabled: false,
  complete: false,
  toggled: false,
  className: '',
};

ActionedLink.propTypes = {
  as: PropTypes.oneOf(['a', 'button']),
  text: PropTypes.string,
  minor: PropTypes.bool,
  disabled: PropTypes.bool,
  className: PropTypes.string,
  complete: PropTypes.bool,
  toggled: PropTypes.bool,
  icon: PropTypes.oneOf([
    'add',
    'download',
    'edit',
    'listen',
    'remove',
    'reuse-this-content',
    'the-trust-project',
    'watch',
    'check',
    'copy',
    'apple-podcasts',
    'google-podcasts',
    'indicator',
    'user',
    'gift',
    'share',
    'bin',
    'save',
    'saved',
    'apple-podcasts-coloured',
    'google-podcasts-coloured',
    'spotify',
    'rss',
  ]).isRequired,
};

export default ActionedLink;
