import React from 'react';
import PropTypes from 'prop-types';
import 'reset-css/reset.css';
import '../color/color';
import '../grid/grid';
import '../typography/typography';
import classnames from 'classnames';
import css from './skip-to-content.css';

const SkipToContent = ({ targetId, inverse }) => {
  function handleSkipLink(evt) {
    const skipTargetEl = document.getElementById(targetId);

    if (!skipTargetEl) {
      return;
    }

    evt.preventDefault();

    skipTargetEl.setAttribute('tabindex', '-1');
    skipTargetEl.focus({ preventScroll: true });
    skipTargetEl.style.outline = '0';
    skipTargetEl.addEventListener('blur', function removeTabindex({ target }) {
      target.removeAttribute('tabindex');
      skipTargetEl.removeEventListener('blur', removeTabindex);
    });
  }

  return (
    <a
      className={classnames(css['ds-skip-to-content'], {
        [css['ds-skip-to-content--inverse']]: inverse,
      })}
      href={`#${targetId}`}
      onClick={handleSkipLink}
    >
      Skip to content
    </a>
  );
};

SkipToContent.defaultProps = {
  inverse: false,
};

SkipToContent.propTypes = {
  inverse: PropTypes.bool,
  targetId: PropTypes.string.isRequired,
};

export default SkipToContent;
