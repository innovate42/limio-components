import getClientAdminData from './client-admin-data';

describe('getClientAdminData()', () => {
  describe('my group subscription link name and url not provided', () => {
    it('should return the default name and url', () => {
      const clientAdminData = getClientAdminData();
      expect(clientAdminData[0].name).toEqual('My group subscription');
      expect(clientAdminData[0].url).toEqual('');
    });
  });
  describe('override my group subscription link url', () => {
    it('should return the supplied url when overriding url is passed in', () => {
      const overridingClientAdminUrl = '/client/admin/test';
      const clientAdminData = getClientAdminData('', overridingClientAdminUrl);
      expect(clientAdminData[0].name).toEqual('My group subscription');
      expect(clientAdminData[0].url).toEqual(overridingClientAdminUrl);
    });
  });
  describe('override my group subscription link name', () => {
    it('should return the supplied name when overriding name is passed in', () => {
      const overridingClientAdminName = '/client/admin/test';
      const clientAdminData = getClientAdminData(overridingClientAdminName);
      expect(clientAdminData[0].name).toEqual(overridingClientAdminName);
      expect(clientAdminData[0].url).toEqual('');
    });
  });
});
