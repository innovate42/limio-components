/* eslint-disable no-console */
import React from 'react';
import { shallow } from 'enzyme';
import NavigationList from './navigation-list';
import { accountData } from '../../constants';

describe('<NavigationList />', () => {
  it('should render the sections list correctly', () => {
    const sectionCount = 25;
    const component = shallow(
      <NavigationList type='section' showNavToggle menuIsOpen />,
    );
    expect(component.find('NavigationControl').props().title).toEqual(
      'Sections',
    );
    expect(component.find('NavigationLink')).toHaveLength(sectionCount);
  });

  it('should render the featured list correctly', () => {
    const featuredCount = 8;
    const component = shallow(
      <NavigationList type='feature' menuIsOpen showNavToggle />,
    );
    expect(component.find('NavigationControl').props().title).toEqual(
      'Featured',
    );
    expect(component.find('NavigationLink')).toHaveLength(featuredCount);
  });

  it('should render the account list correctly', () => {
    const accountCount = 10;
    const component = shallow(
      <NavigationList
        type='account-logged-in'
        username='John Smith'
        menuIsOpen
        showNavToggle
        accountData={accountData}
      />,
    );
    expect(component.find('strong').text()).toEqual('John Smith');
    expect(component.find('NavigationControl').props().title).toEqual(
      'My account',
    );
    expect(component.find('NavigationLink')).toHaveLength(accountCount);
  });

  it('should render the more list correctly', () => {
    const moreCount = 6;
    const component = shallow(
      <NavigationList type='more' menuIsOpen showNavToggle />,
    );
    expect(component.find('NavigationControl').props().title).toEqual('More');
    expect(component.find('NavigationLink')).toHaveLength(moreCount);
  });

  it("should not render a NavigationList when type isn't one of the required types", () => {
    const originalError = console.error;
    console.error = jest.fn();

    const component = shallow(<NavigationList type='' menuIsOpen />);
    expect(component.find('NavigationList')).toHaveLength(0);

    console.error = originalError;
  });
});
