import React from 'react';
import { shallow } from 'enzyme';
import EmphasisedLink from './emphasised-link';

describe('<EmphasisedLink />', () => {
  const link = 'www.test.com';

  it('should render the link text', () => {
    const component = shallow(<EmphasisedLink text='Text' href={link} />);
    expect(component.text()).toEqual('Text');
  });

  it('should add the correct link', () => {
    const component = shallow(<EmphasisedLink text='Text' href={link} />);
    expect(component.props().href).toEqual(link);
  });

  it('should add additonal props that it is passed', () => {
    const component = shallow(
      <EmphasisedLink text='Text' href={link} foo='bar' />,
    );
    expect(component.find('a').props().foo).toEqual('bar');
  });

  it('should apply the correct classname if passed inverse as a prop', () => {
    const callToAction = shallow(
      <EmphasisedLink text='Text' href={link} foo='bar' inverse />,
    );
    expect(callToAction.find('a').props().className).toEqual(
      'ds-emphasised-link ds-emphasised-link--inverse',
    );
  });

  it('should apply the correct classname if passed secondary as a variant', () => {
    const callToAction = shallow(
      <EmphasisedLink text='Text' href={link} foo='bar' variant='secondary' />,
    );
    expect(callToAction.find('a').props().className).toEqual(
      'ds-emphasised-link ds-emphasised-link--secondary',
    );
  });
});
