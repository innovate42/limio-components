import React from 'react';
import { shallow } from 'enzyme';
import ControlExpand from './control-expand';

describe('<ControlExpand />', () => {
  it('should render the correct default props', () => {
    const component = shallow(<ControlExpand>Expand</ControlExpand>);
    expect(component.find('button').props().type).toEqual('button');
    expect(component.props().className).toEqual('ds-control-expand');
    expect(component.props().disabled).toEqual(false);
    expect(component.props()['aria-label']).toEqual('Expand');
  });

  it('should render a disabled attribute if its passed', () => {
    const component = shallow(<ControlExpand disabled>Expand</ControlExpand>);
    expect(component.find('button').props().disabled).toEqual(true);
  });

  it('should render the ariaLabel attribute if its passed', () => {
    const component = shallow(
      <ControlExpand ariaLabel='test label'>Expand</ControlExpand>,
    );
    expect(component.find('button').props()['aria-label']).toEqual(
      'test label',
    );
  });

  it('should render disc classname if disc prop is true', () => {
    const component = shallow(<ControlExpand disc>Expand</ControlExpand>);
    expect(component.find('button').props().className).toEqual(
      'ds-control-expand ds-control-expand--disc',
    );
  });

  it('should pass the handleClick prop to the expand button`s onClick event handler', () => {
    const handleClick = jest.fn();
    const component = shallow(
      <ControlExpand handleClick={handleClick}>Expand</ControlExpand>,
    );
    component.find('button').simulate('click');
    expect(handleClick).toHaveBeenCalled();
  });
});
