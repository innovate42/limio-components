import React from 'react';
import { shallow } from 'enzyme';
import ControlDrag from './control-drag';

describe('<ControlDrag />', () => {
  it('should render the correct default props', () => {
    const component = shallow(<ControlDrag>Drag</ControlDrag>);
    expect(component.find('button').props().type).toEqual('button');
    expect(component.props().className).toEqual('ds-control-drag');
    expect(component.props().disabled).toEqual(false);
    expect(component.props()['aria-label']).toEqual('Drag');
  });

  it('should render a disabled attribute if its passed', () => {
    const component = shallow(<ControlDrag disabled>Drag</ControlDrag>);
    expect(component.find('button').props().disabled).toEqual(true);
  });

  it('should render the ariaLabel attribute if its passed', () => {
    const component = shallow(
      <ControlDrag ariaLabel='test label'>Drag</ControlDrag>,
    );
    expect(component.find('button').props()['aria-label']).toEqual(
      'test label',
    );
  });

  it('should render inverse classname if inverse prop is true', () => {
    const component = shallow(<ControlDrag inverse>Drag</ControlDrag>);
    expect(component.find('button').props().className).toEqual(
      'ds-control-drag ds-control-drag--inverse',
    );
  });

  it('should render the vertical icon as default icon', () => {
    const handleClick = jest.fn();
    const component = shallow(
      <ControlDrag handleClick={handleClick}>Drag</ControlDrag>,
    );
    expect(component.find('#iconHorizontal').length).toEqual(1);
  });

  it('should render the horizontal icon if the prop horizontal is passed', () => {
    const handleClick = jest.fn();
    const component = shallow(
      <ControlDrag horizontal handleClick={handleClick}>
        Drag
      </ControlDrag>,
    );
    expect(component.find('#iconVertical').length).toEqual(1);
  });
});
