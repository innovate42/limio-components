import React from 'react';
import { shallow } from 'enzyme';
import Tooltip from './tooltip';

describe('<Tooltip />', () => {
  it('should render the correct default props', () => {
    const component = shallow(<Tooltip />);
    expect(component.find('div').props().className).toEqual('ds-tooltip');
    expect(component.find('#tooltip').props().className).toEqual(
      'ds-tooltip__balloon ds-tooltip__balloon--north',
    );
    expect(component.find('label').props().className).toEqual(
      'ds-tooltip-label',
    );
    expect(component.find('label').text()).toEqual('');
    expect(component.find('button').props().className).toEqual(
      'ds-tooltip-button',
    );
  });

  describe('tooltip label', () => {
    it('should render the labelText as the tooltip label text', () => {
      const component = shallow(<Tooltip labelText='Tooltip label' />);
      expect(component.find('label').text()).toEqual('Tooltip label');
    });
    it('should render inverse label classname if inverse prop is true', () => {
      const component = shallow(<Tooltip inverse />);
      expect(component.find('label').props().className).toEqual(
        'ds-tooltip-label ds-tooltip-label--inverse',
      );
    });
  });

  describe('tooltip button', () => {
    it('should render inverse class names if inverse prop is true', () => {
      const component = shallow(<Tooltip inverse />);
      expect(component.find('button').props().className).toEqual(
        'ds-tooltip-button ds-tooltip-button--inverse',
      );
    });

    it('should render ds-tooltip-button--left class name if direction props is east', () => {
      const component = shallow(<Tooltip direction='east' />);
      expect(component.find('button').props().className).toEqual(
        'ds-tooltip-button ds-tooltip-button--left',
      );
    });
  });

  describe('tooltip balloon', () => {
    it('should render the tooltip balloon text', () => {
      const component = shallow(<Tooltip balloonText='Tooltip balloon' />);
      expect(component.find('#tooltip').text()).toEqual('Tooltip balloon');
    });

    it('should render inverse classname if inverse prop is true', () => {
      const component = shallow(<Tooltip inverse />);
      expect(component.find('#tooltip').props().className).toEqual(
        'ds-tooltip__balloon ds-tooltip__balloon--north ds-tooltip__balloon--inverse',
      );
    });

    it('should render south classname if direction is south', () => {
      const component = shallow(<Tooltip direction='south' />);
      expect(component.find('#tooltip').props().className).toEqual(
        'ds-tooltip__balloon ds-tooltip__balloon--south',
      );
    });

    it('should render west direction classname if direction is west', () => {
      const component = shallow(<Tooltip direction='west' />);
      expect(component.find('#tooltip').props().className).toEqual(
        'ds-tooltip__balloon ds-tooltip__balloon--west',
      );
    });

    it('should render east direction classname if direction is east', () => {
      const component = shallow(<Tooltip direction='east' />);
      expect(component.find('#tooltip').props().className).toEqual(
        'ds-tooltip__balloon ds-tooltip__balloon--east',
      );
    });
  });
});
