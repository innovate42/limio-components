import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import 'reset-css/reset.css';
import '../color/color';
import '../color/color-hsl';
import '../interactions/interactions';
import css from './control-drag.css';

const ControlDrag = ({
  ariaLabel,
  disabled,
  horizontal,
  inverse,
  handleClick,
  ...otherProps
}) => (
  <button
    className={classnames(css['ds-control-drag'], {
      [css['ds-control-drag--inverse']]: inverse,
    })}
    onClick={handleClick}
    aria-label={ariaLabel}
    disabled={disabled}
    type='button'
    {...otherProps}
  >
    {horizontal ? (
      <svg
        id='iconVertical'
        width='12'
        height='14'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          className={classnames(css['path-background'], {
            [css['path-background--disabled']]: disabled,
            [css['path-background--inverse']]: inverse,
          })}
          d='M5 14h2V0H5zM0 14h2V0H0zM10 0v14h2V0z'
        />
      </svg>
    ) : (
      <svg
        id='iconHorizontal'
        width='14'
        height='12'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          className={classnames(css['path-background'], {
            [css['path-background--disabled']]: disabled,
            [css['path-background--inverse']]: inverse,
          })}
          d='M0 12h14v-2H0v2zm0-5h14V5H0v2zm0-7v2h14V0H0z'
        />
      </svg>
    )}
  </button>
);

ControlDrag.defaultProps = {
  ariaLabel: 'Drag',
  disabled: false,
  horizontal: false,
  inverse: false,
  handleClick: null,
};

ControlDrag.propTypes = {
  ariaLabel: PropTypes.string,
  disabled: PropTypes.bool,
  horizontal: PropTypes.bool,
  inverse: PropTypes.bool,
  handleClick: PropTypes.func,
};

export default ControlDrag;
