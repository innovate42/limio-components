import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import 'reset-css/reset.css';
import '../color/color';
import '../color/color-hsl';
import '../interactions/interactions';
import css from './control-media.css';

const CONTROL_TYPES = {
  PLAY: 'play',
  PAUSE: 'pause',
  STOP: 'stop',
};

const ControlMedia = ({
  ariaLabel,
  controlType,
  disabled,
  handleClick,
  inverse,
  ...otherProps
}) => (
  <button
    className={classnames(css['ds-control-media'], {
      [css['ds-control-media--inverse']]: inverse,
    })}
    onClick={handleClick}
    aria-label={ariaLabel || controlType}
    disabled={disabled}
    type='button'
    {...otherProps}
  >
    {controlType === CONTROL_TYPES.PLAY && (
      <svg id='iconPlay' height='32' width='32'>
        <polygon
          className={classnames(css['path-background'], {
            [css['path-background--disabled']]: disabled,
            [css['path-background--inverse']]: inverse,
          })}
          points='12,7 12,25 24,16'
        />
      </svg>
    )}
    {controlType === CONTROL_TYPES.PAUSE && (
      <svg
        id='iconPause'
        width='24'
        height='24'
        xmlns='http://www.w3.org/2000/svg'
      >
        <g>
          <rect
            height='14'
            width='4'
            y='5'
            x='6'
            className={classnames(css['path-background'], {
              [css['path-background--disabled']]: disabled,
              [css['path-background--inverse']]: inverse,
            })}
          />
          <rect
            height='14'
            width='4'
            y='5'
            x='14'
            className={classnames(css['path-background'], {
              [css['path-background--disabled']]: disabled,
              [css['path-background--inverse']]: inverse,
            })}
          />
        </g>
      </svg>
    )}
    {controlType === CONTROL_TYPES.STOP && (
      <svg
        id='iconStop'
        width='12'
        height='12'
        xmlns='http://www.w3.org/2000/svg'
      >
        <rect
          className={classnames(css['path-background'], {
            [css['path-background--disabled']]: disabled,
            [css['path-background--inverse']]: inverse,
          })}
          height='100%'
          width='100%'
        />
      </svg>
    )}
  </button>
);

ControlMedia.defaultProps = {
  ariaLabel: null,
  controlType: CONTROL_TYPES.PLAY,
  disabled: false,
  handleClick: null,
  inverse: false,
};

ControlMedia.propTypes = {
  ariaLabel: PropTypes.string,
  controlType: PropTypes.oneOf([
    CONTROL_TYPES.PLAY,
    CONTROL_TYPES.PAUSE,
    CONTROL_TYPES.STOP,
  ]),
  disabled: PropTypes.bool,
  handleClick: PropTypes.func,
  inverse: PropTypes.bool,
};

export default ControlMedia;
