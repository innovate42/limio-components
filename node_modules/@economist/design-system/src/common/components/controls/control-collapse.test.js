import React from 'react';
import { shallow } from 'enzyme';
import ControlCollapse from './control-collapse';

describe('<ControlCollapse />', () => {
  it('should render the correct default props', () => {
    const component = shallow(<ControlCollapse>Collapse</ControlCollapse>);
    expect(component.find('button').props().type).toEqual('button');
    expect(component.props().className).toEqual('ds-control-collapse');
    expect(component.props().disabled).toEqual(false);
    expect(component.props()['aria-label']).toEqual('Collapse');
  });

  it('should render a disabled attribute if its passed', () => {
    const component = shallow(
      <ControlCollapse disabled>Collapse</ControlCollapse>,
    );
    expect(component.find('button').props().disabled).toEqual(true);
  });

  it('should render the ariaLabel attribute if its passed', () => {
    const component = shallow(
      <ControlCollapse ariaLabel='test label'>Collapse</ControlCollapse>,
    );
    expect(component.find('button').props()['aria-label']).toEqual(
      'test label',
    );
  });

  it('should render disc classname if disc prop is true', () => {
    const component = shallow(<ControlCollapse disc>Collapse</ControlCollapse>);
    expect(component.find('button').props().className).toEqual(
      'ds-control-collapse ds-control-collapse--disc',
    );
  });

  it('should pass the handleClick prop to the Collapse button`s onClick event handler', () => {
    const handleClick = jest.fn();
    const component = shallow(
      <ControlCollapse handleClick={handleClick}>Collapse</ControlCollapse>,
    );
    component.find('button').simulate('click');
    expect(handleClick).toHaveBeenCalled();
  });
});
