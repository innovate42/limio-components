import generateShareLink from './generate-share-link';

const params = {
  longtext: 'example link longtext',
  platform: 'Facebook',
  text: 'example link text',
  url: 'http://www.example.com',
};
describe('generateShareLink', () => {
  it('should return the matching icon for each platform passed', () => {
    expect(generateShareLink({ ...params, platform: 'Facebook' })).toEqual(
      `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(
        params.url,
      )}&quote=${encodeURIComponent(`${params.text} ${params.longtext}`)}`,
    );
    expect(generateShareLink({ ...params, platform: 'Twitter' })).toEqual(
      `https://twitter.com/share?url=${encodeURIComponent(
        params.url,
      )}&text=${encodeURIComponent(params.text)}`,
    );
    expect(generateShareLink({ ...params, platform: 'LinkedIn' })).toEqual(
      `https://www.linkedin.com/shareArticle?url=${encodeURIComponent(
        params.url,
      )}&title=${encodeURIComponent(params.text)}&summary=${encodeURIComponent(
        params.longtext,
      )}`,
    );
    expect(generateShareLink({ ...params, platform: 'WhatsApp' })).toEqual(
      `https://wa.me/?text=${encodeURIComponent(
        `${params.text} ${params.longtext} ${params.url}`,
      )}`,
    );
  });
});
