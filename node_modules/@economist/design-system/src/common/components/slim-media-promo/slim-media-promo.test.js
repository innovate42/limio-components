import React from 'react';
import { shallow } from 'enzyme';
import SlimMediaPromo from './slim-media-promo';

describe('<SlimMediaPromo />', () => {
  const title = 'Test title';
  const link = 'www.test.com';
  const linkText = 'Test link description';
  const defaultProps = {
    title,
    linkURL: link,
    linkText,
  };

  it('should apply the correct classname when passed inverse as a prop', () => {
    const component = shallow(<SlimMediaPromo {...defaultProps} inverse />);

    expect(
      component
        .find('div')
        .first()
        .props().className,
    ).toEqual('ds-slim-media-promo ds-slim-media-promo--inverse');
  });

  it('should apply the correct classname when passed singapore-55 as a prop', () => {
    const component = shallow(
      <SlimMediaPromo {...defaultProps} variant='singapore-55' />,
    );

    expect(
      component
        .find('div')
        .first()
        .props().className,
    ).toEqual('ds-slim-media-promo ds-slim-media-promo--singapore-55');
  });

  it('should apply the correct classname when passed paris-90 as a prop', () => {
    const component = shallow(
      <SlimMediaPromo {...defaultProps} variant='paris-90' />,
    );

    expect(
      component
        .find('div')
        .first()
        .props().className,
    ).toEqual('ds-slim-media-promo ds-slim-media-promo--paris-90');
  });

  it('should apply the correct classname when passed chicago-20 and inverse as props', () => {
    const component = shallow(
      <SlimMediaPromo {...defaultProps} inverse variant='chicago-20' />,
    );

    expect(
      component
        .find('div')
        .first()
        .props().className,
    ).toEqual(
      'ds-slim-media-promo ds-slim-media-promo--inverse ds-slim-media-promo--chicago-20',
    );
  });

  it('should render the title', () => {
    const component = shallow(<SlimMediaPromo {...defaultProps} />);

    expect(component.find('.ds-slim-media-promo__title').text()).toContain(
      title,
    );
  });

  it('should render the LinkWithArrowIcon component with the correct style props', () => {
    const component = shallow(<SlimMediaPromo {...defaultProps} />);

    expect(component.find('LinkWithArrowIcon').props().heavy).toEqual(true);
    expect(component.find('LinkWithArrowIcon').props().minor).toEqual(true);
  });

  it('should pass the correct link to LinkWithArrowIcon', () => {
    const component = shallow(<SlimMediaPromo {...defaultProps} />);

    expect(component.find('LinkWithArrowIcon').props().href).toEqual(link);
  });

  it('should pass the correct link text to LinkWithArrowIcon', () => {
    const component = shallow(<SlimMediaPromo {...defaultProps} />);

    expect(component.find('LinkWithArrowIcon').props().text).toEqual(linkText);
  });
});
