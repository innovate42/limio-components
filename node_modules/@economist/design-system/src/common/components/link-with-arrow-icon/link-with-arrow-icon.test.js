import React from 'react';
import { shallow } from 'enzyme';
import LinkWithArrowIcon from './link-with-arrow-icon';

describe('<LinkWithArrowIcon />', () => {
  const url = 'www.test.com';

  it('should apply the correct classname when passed minor as a prop', () => {
    const component = shallow(<LinkWithArrowIcon href={url} minor />);

    expect(component.find('a').props().className).toEqual(
      'ds-link-with-arrow-icon ds-link-with-arrow-icon--minor',
    );
  });

  it('should apply the correct classname when passed heavy as a prop', () => {
    const component = shallow(<LinkWithArrowIcon href={url} heavy />);

    expect(component.find('a').props().className).toEqual(
      'ds-link-with-arrow-icon ds-link-with-arrow-icon--heavy',
    );
  });

  it('should apply the correct classname when passed inverse as a prop', () => {
    const component = shallow(<LinkWithArrowIcon href={url} inverse />);

    expect(component.find('a').props().className).toEqual(
      'ds-link-with-arrow-icon ds-link-with-arrow-icon--inverse',
    );
  });

  it('should render the text', () => {
    const component = shallow(<LinkWithArrowIcon href={url} text='test' />);

    expect(component.find('span').text()).toContain('test');
  });

  it('should render the link', () => {
    const component = shallow(<LinkWithArrowIcon href={url} />);

    expect(component.find('a').props().href).toEqual(url);
  });
});
