import React from 'react';
import { shallow } from 'enzyme';
import NavigationDisclosure from './navigation-disclosure';

describe('<NavigationDisclosure />', () => {
  const url = 'www.test.com';

  it('should render children', () => {
    const component = shallow(<NavigationDisclosure text='Text' href={url} />);
    expect(component.text()).toEqual('Text');
  });

  it('should add inverse className when inverse is set', () => {
    const component = shallow(
      <NavigationDisclosure inverse href={url} text='example text' />,
    );
    expect(component.hasClass('ds-navigation-disclosure')).toBe(true);
    expect(component.hasClass('ds-navigation-disclosure--inverse')).toBe(true);
  });

  it('should not add inverse className when inverse is not set', () => {
    const component = shallow(
      <NavigationDisclosure href={url} text='example text' />,
    );
    expect(component.hasClass('ds-navigation-disclosure')).toBe(true);
  });

  it('should add selected className when selected is set', () => {
    const component = shallow(
      <NavigationDisclosure expanded href={url} text='example text' />,
    );
    expect(component.hasClass('ds-navigation-disclosure')).toBe(true);
    expect(component.hasClass('ds-navigation-disclosure is-selected')).toBe(
      true,
    );
  });
});
