import React from 'react';
import { shallow } from 'enzyme';
import NavigationLink from './navigation-link';

describe('<NavigationLink />', () => {
  const url = 'www.test.com';

  it('should render children', () => {
    const component = shallow(<NavigationLink text='Text' href={url} />);
    expect(component.text()).toEqual('Text');
  });

  it('should add inverse className when inverse is set', () => {
    const component = shallow(
      <NavigationLink inverse href={url} text='example text' />,
    );
    expect(component.hasClass('ds-navigation-link')).toBe(true);
    expect(component.hasClass('ds-navigation-link--inverse')).toBe(true);
  });

  it('should not add inverse className when inverse is not set', () => {
    const component = shallow(
      <NavigationLink href={url} text='example text' />,
    );
    expect(component.hasClass('ds-navigation-link')).toBe(true);
  });

  it('should add secondary className when secondary is set', () => {
    const component = shallow(
      <NavigationLink secondary href={url} text='example text' />,
    );
    expect(component.hasClass('ds-navigation-link')).toBe(true);
    expect(component.hasClass('ds-navigation-link--secondary')).toBe(true);
  });

  it('should add selected className when selected is set', () => {
    const component = shallow(
      <NavigationLink selected href={url} text='example text' />,
    );
    expect(component.hasClass('ds-navigation-link')).toBe(true);
    expect(component.hasClass('ds-navigation-link--selected')).toBe(true);
  });
});
