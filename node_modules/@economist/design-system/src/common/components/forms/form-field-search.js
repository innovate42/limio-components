import React from 'react';
import PropTypes from 'prop-types';
import FormFieldCombinedInput from './form-field-combined-input';

const FormFieldSearch = ({
  adjacent,
  disabled,
  id,
  inverse,
  labelText,
  maxLength,
  name,
  onChange,
  placeholder,
  slim,
  value,
  ...otherProps
}) => (
  <>
    <FormFieldCombinedInput
      adjacent={adjacent}
      buttonLabel={
        <svg
          xmlns='http://www.w3.org/2000/svg'
          width='24'
          height='24'
          role='img'
          aria-labelledby={`${id}-icon`}
        >
          <title id={`${id}-icon`}>Search</title>
          <path d='M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' />
        </svg>
      }
      disabled={disabled}
      id={id}
      icon
      inverse={inverse}
      labelText={labelText}
      maxLength={maxLength}
      name={name}
      onChange={onChange}
      placeholder={placeholder}
      slim={slim}
      value={value}
      {...otherProps}
    />
  </>
);

FormFieldSearch.defaultProps = {
  adjacent: null,
  disabled: false,
  id: 'search',
  inverse: null,
  maxLength: null,
  name: '',
  onChange: null,
  placeholder: ' ',
  slim: null,
  value: '',
};

FormFieldSearch.propTypes = {
  adjacent: PropTypes.bool,
  disabled: PropTypes.bool,
  id: PropTypes.string,
  inverse: PropTypes.bool,
  labelText: PropTypes.string.isRequired,
  maxLength: PropTypes.number,
  name: PropTypes.string,
  onChange: PropTypes.func,
  placeholder: PropTypes.string,
  slim: PropTypes.bool,
  value: PropTypes.string,
};

export default FormFieldSearch;
