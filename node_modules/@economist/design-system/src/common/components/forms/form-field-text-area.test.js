import React from 'react';
import { shallow } from 'enzyme';
import FormFieldTextArea from './form-field-text-area';

describe('<FormFieldTextArea />', () => {
  it('should render an input component with default props', () => {
    const component = shallow(
      <FormFieldTextArea
        value='test value'
        id='123'
        helperText='Form helper text'
        labelText='Form label'
      />,
    );
    const textArea = component.find('textarea');
    expect(textArea.props().className).toEqual('ds-form-input ds-text-area');
    expect(textArea.props().disabled).toEqual(false);
    expect(textArea.props().onBlur).toEqual(null);
    expect(textArea.props().onChange).toEqual(null);
    expect(textArea.props().placeholder).toEqual(null);
    expect(textArea.props().name).toEqual('');
    expect(textArea.props().value).toEqual('test value');
  });

  it('should pass props to an input component', () => {
    const handleOnBlur = jest.fn();
    const handleOnChange = jest.fn();

    const component = shallow(
      <FormFieldTextArea
        disabled
        id='123'
        name='name'
        labelText='Form label'
        onBlur={handleOnBlur}
        onChange={handleOnChange}
        placeholder='Placeholder text'
        value='Text value'
        cols='22'
        rows='11'
        maxLength={100}
      />,
    );
    const textArea = component.find('textarea');
    expect(textArea.props().disabled).toBeDefined();
    expect(textArea.props().id).toEqual('123');
    expect(textArea.props().onBlur).toEqual(handleOnBlur);
    expect(textArea.props().onChange).toEqual(handleOnChange);
    expect(textArea.props().placeholder).toEqual('Placeholder text');
    expect(textArea.props().name).toEqual('name');
    expect(textArea.props().value).toEqual('Text value');
    expect(textArea.props().cols).toEqual('22');
    expect(textArea.props().rows).toEqual('11');
    expect(textArea.props().maxLength).toEqual(100);
  });

  it('should pass props to the FormLabel component', () => {
    const component = shallow(
      <FormFieldTextArea id='123' labelTag='FORM TAG' labelText='Form label' />,
    );
    const label = component.find('FormLabel');
    expect(label.props().htmlFor).toEqual('123');
    expect(label.props().text).toEqual('Form label');
    expect(label.props().tag).toEqual('FORM TAG');
  });

  it('should pass helper text prop to the FormHelperText component', () => {
    const component = shallow(
      <FormFieldTextArea
        id='123'
        helperText='Form helper text'
        labelText='Form label'
      />,
    );
    expect(component.find('FormHelperText').props().text).toEqual(
      'Form helper text',
    );
  });

  describe('validation', () => {
    it('should render a textarea with invalid className', () => {
      const component = shallow(
        <FormFieldTextArea
          id='123'
          error='Inline text notice'
          labelText='Form label'
        />,
      );
      expect(component.find('textarea').props().className).toEqual(
        'ds-form-input ds-text-area ds-form-input--invalid',
      );
    });

    it('should render a FormNotice component with error text', () => {
      const component = shallow(
        <FormFieldTextArea
          id='123'
          error='Inline text notice'
          labelText='Form label'
        />,
      );
      const notice = component.find('FormNotice');
      expect(notice.props().text).toEqual('Inline text notice');
    });
  });
});
