import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import 'reset-css/reset.css';
import '../color/color';
import '../color/color-hsl';
import '../grid/grid';
import '../typography/typography';
import FormHelperText from './form-helper-text';
import FormLabel from './form-label';
import FormNotice from './form-notice';
import css from './form-input.css';

const FormFieldTextArea = ({
  disabled,
  error,
  helperText,
  id,
  labelTag,
  labelText,
  name,
  onBlur,
  onChange,
  placeholder,
  value,
  cols,
  rows,
  maxLength,
}) => (
  <div>
    <FormLabel text={labelText} tag={labelTag} htmlFor={id} />
    {helperText && <FormHelperText text={helperText} />}
    <textarea
      className={classnames(css['ds-form-input'], css['ds-text-area'], {
        [css['ds-form-input--invalid']]: error,
      })}
      disabled={disabled}
      id={id}
      name={name}
      onBlur={onBlur}
      onChange={onChange}
      placeholder={placeholder}
      cols={cols}
      rows={rows}
      value={value}
      maxLength={maxLength}
    />
    {error && <FormNotice text={error} />}
  </div>
);

FormFieldTextArea.defaultProps = {
  disabled: false,
  id: null,
  error: '',
  helperText: null,
  name: '',
  onBlur: null,
  onChange: null,
  placeholder: null,
  labelTag: null,
  value: '',
  rows: null,
  cols: null,
  maxLength: null,
};

FormFieldTextArea.propTypes = {
  disabled: PropTypes.bool,
  error: PropTypes.string,
  helperText: PropTypes.string,
  id: PropTypes.string,
  labelTag: PropTypes.string,
  labelText: PropTypes.string.isRequired,
  name: PropTypes.string,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  placeholder: PropTypes.string,
  value: PropTypes.string,
  rows: PropTypes.string,
  cols: PropTypes.string,
  maxLength: PropTypes.number,
};

export default FormFieldTextArea;
