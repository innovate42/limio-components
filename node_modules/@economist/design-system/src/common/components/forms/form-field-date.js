import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import 'reset-css/reset.css';
import FormHelperText from './form-helper-text';
import FormLabel from './form-label';
import FormNotice from './form-notice';
import cssLayout from './form-field-layout.css';
import FormInput from './form-input';

const FormFieldDate = ({
  adjacent,
  disabled,
  error,
  helperText,
  id,
  labelTag,
  labelText,
  min,
  max,
  name,
  onBlur,
  onChange,
  slim,
  step,
  value,
}) => (
  <div
    className={classnames({
      [`${cssLayout['ds-form-field-layout']} ${
        cssLayout['ds-form-field-layout--adjacent']
      }`]: adjacent,
    })}
  >
    <FormLabel text={labelText} tag={labelTag} htmlFor={id} />
    {helperText && <FormHelperText text={helperText} />}
    <FormInput
      disabled={disabled}
      error={error}
      id={id}
      max={max}
      min={min}
      name={name}
      onBlur={onBlur}
      onChange={onChange}
      slim={slim}
      step={step}
      type='date'
      value={value}
    />
    {error && <FormNotice text={error} />}
  </div>
);

FormFieldDate.defaultProps = {
  adjacent: false,
  disabled: false,
  error: null,
  helperText: null,
  id: '',
  labelTag: null,
  max: null,
  min: null,
  name: '',
  onBlur: null,
  onChange: null,
  slim: null,
  step: null,
  value: '',
};

FormFieldDate.propTypes = {
  adjacent: PropTypes.bool,
  disabled: PropTypes.bool,
  error: PropTypes.string,
  helperText: PropTypes.string,
  id: PropTypes.string,
  labelTag: PropTypes.string,
  labelText: PropTypes.string.isRequired,
  max: PropTypes.string,
  min: PropTypes.string,
  name: PropTypes.string,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  slim: PropTypes.bool,
  step: PropTypes.string,
  value: PropTypes.string,
};

export default FormFieldDate;
