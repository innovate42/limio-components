import React from 'react';
import PropTypes from 'prop-types';
import 'reset-css/reset.css';
import '../color/color';
import '../color/color-hsl';
import '../grid/grid';
import '../typography/typography';
import FormHelperText from './form-helper-text';
import FormLabel from './form-label';
import FormInput from './form-input';
import FormNotice from './form-notice';

const FormFieldMultipleInputs = ({
  fields,
  helperText,
  labelText,
  notice,
  onBlur,
  onChange,
  ...otherProps
}) => (
  <div>
    <FormLabel text={labelText} />
    {helperText && <FormHelperText text={helperText} />}
    {Object.keys(fields).map(fieldId => (
      <FormInput
        ariaLabel={fields[fieldId].ariaLabel}
        disabled={fields[fieldId].disabled}
        error={fields[fieldId].error}
        id={fieldId}
        key={fieldId}
        name={fields[fieldId].name}
        onBlur={onBlur}
        onChange={onChange}
        placeholder={fields[fieldId].placeholder}
        type={fields[fieldId].type}
        value={fields[fieldId].value}
        {...otherProps}
      />
    ))}
    {notice && <FormNotice text={notice} />}
  </div>
);

FormFieldMultipleInputs.defaultProps = {
  helperText: null,
  labelText: '',
  notice: '',
  onBlur: null,
};

FormFieldMultipleInputs.propTypes = {
  helperText: PropTypes.string,
  labelText: PropTypes.string,
  fields: PropTypes.shape({
    id: PropTypes.shape({
      ariaLabel: PropTypes.string,
      disabled: PropTypes.bool,
      error: PropTypes.string,
      id: PropTypes.string,
      name: PropTypes.string,
      placeholder: PropTypes.string,
      type: FormInput.propTypes.type,
      value: PropTypes.string,
    }),
  }).isRequired,
  notice: PropTypes.string,
  onBlur: PropTypes.func,
  onChange: PropTypes.func.isRequired,
};

export default FormFieldMultipleInputs;
