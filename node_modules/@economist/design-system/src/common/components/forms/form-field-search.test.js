import React from 'react';
import { shallow } from 'enzyme';
import FormFieldSearch from './form-field-search';
import FormFieldCombinedInput from './form-field-combined-input';

describe('<FormFieldSearch />', () => {
  it('should pass default props to the CombinedField component', () => {
    const component = shallow(<FormFieldSearch labelText='Form label' />);
    const combinedField = component.find(FormFieldCombinedInput);
    expect(combinedField.props().disabled).toEqual(false);
    expect(combinedField.props().onChange).toEqual(null);
    expect(combinedField.props().placeholder).toEqual(' ');
    expect(combinedField.props().slim).toEqual(null);
    expect(combinedField.props().id).toEqual('search');
    expect(combinedField.props().maxLength).toEqual(null);
    expect(combinedField.props().name).toEqual('');
    expect(combinedField.props().value).toEqual('');
  });

  it('should pass props to a CombinedField component', () => {
    const handleOnChange = jest.fn();
    const maxLength = 10;

    const component = shallow(
      <FormFieldSearch
        adjacent
        disabled
        id='123'
        labelText='Form label'
        inverse
        maxLength={maxLength}
        onChange={handleOnChange}
        placeholder='Placeholder text'
        slim
        name='Field name'
        value='Text value'
      />,
    );
    const combinedFieldProps = component.find(FormFieldCombinedInput).props();
    expect(combinedFieldProps.adjacent).toEqual(true);
    expect(combinedFieldProps.disabled).toEqual(true);
    expect(combinedFieldProps.id).toEqual('123');
    expect(combinedFieldProps.inverse).toEqual(true);
    expect(combinedFieldProps.maxLength).toEqual(maxLength);
    expect(combinedFieldProps.onChange).toEqual(handleOnChange);
    expect(combinedFieldProps.placeholder).toEqual('Placeholder text');
    expect(combinedFieldProps.slim).toEqual(true);
    expect(combinedFieldProps.name).toEqual('Field name');
    expect(combinedFieldProps.value).toEqual('Text value');
  });

  it('should pass additional props to the CombinedField component', () => {
    const component = shallow(
      <FormFieldSearch foo='bar' id='123' labelText='Form label' />,
    );
    expect(component.find(FormFieldCombinedInput).props().foo).toEqual('bar');
  });
});
