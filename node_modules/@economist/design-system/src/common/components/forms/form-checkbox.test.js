import React from 'react';
import { shallow } from 'enzyme';
import FormCheckbox from './form-checkbox';
import FormCheckLabel from './form-check-label';

describe('<FormCheckbox />', () => {
  it('should render a container div with default class name', () => {
    const component = shallow(<FormCheckbox labelText='Input text' />);
    const container = component.first();
    expect(container.props().className).toEqual('ds-form-checkbox');
  });

  it('should render a label component with default props', () => {
    const component = shallow(<FormCheckbox labelText='Input text' />);
    const labelComponent = component.find(FormCheckLabel);
    expect(labelComponent.children().text()).toEqual('Input text');
    expect(labelComponent.props().htmlFor).toEqual(undefined);
    expect(labelComponent.props().isDisabled).toEqual(false);
  });

  it('should pass props to the input & label components', () => {
    const handleOnChange = jest.fn();
    const component = shallow(
      <FormCheckbox
        disabled
        defaultChecked
        id='123'
        required
        name='name'
        labelText='Form label'
        onChange={handleOnChange}
        value='Checkbox value'
      />,
    );
    const inputComponent = component.find('input');
    const labelComponent = component.find(FormCheckLabel);
    expect(inputComponent.props().disabled).toEqual(true);
    expect(inputComponent.props().defaultChecked).toEqual(true);
    expect(inputComponent.props().id).toEqual('123');
    expect(inputComponent.props().required).toEqual(true);
    expect(inputComponent.props().name).toEqual('name');
    expect(inputComponent.props().onChange).toEqual(handleOnChange);
    expect(inputComponent.props().value).toEqual('Checkbox value');
    expect(labelComponent.props().htmlFor).toEqual('123');
  });

  it('should pass props to the label component', () => {
    const component = shallow(
      <FormCheckbox id='123' labelText='Form label' disabled />,
    );
    const label = component.find(FormCheckLabel);
    expect(label.props().htmlFor).toEqual('123');
    expect(label.props().isDisabled).toEqual(true);
  });

  it('should render indeterminate modifier class name if isIndeterminate prop is passed', () => {
    const component = shallow(
      <FormCheckbox isIndeterminate labelText='Form label' />,
    );
    expect(component.first().props().className).toEqual(
      'ds-form-checkbox ds-form-checkbox--indeterminate',
    );
  });
});
