const postcssNested = require('postcss-nested');
const postcssCustomMedia = require('postcss-custom-media');
const cssNano = require('cssnano');
const postcssUrl = require('postcss-url');
const { version } = require('./package.json');

// We export `rewriteCdnUrls` as a helper function so it can be consumed in `postcss.js` to avoid
// duplicating the code in two places.
const _rewriteCdnUrls = postcssUrl({
  url: asset => {
    if (asset.originUrl.startsWith('eds://')) {
      // Re-write URLs prefixed with eds:// to use CDN URL
      let url = `https://cdn.design-system.economist.com/assets/${version}/${asset.url.replace(
        'eds://',
        '',
      )}`;

      // If defined, use EDS_ASSET_PREFIX instead of CDN URL prefix.
      // This is particularly useful when doing local development, to preview
      // assets served locally (e.g. with `EDS_ASSET_PREFIX=`http://localhost:3000`)
      if (process.env.EDS_ASSET_PREFIX) {
        url = `${asset.url.replace('eds://', process.env.EDS_ASSET_PREFIX)}`;
      }

      return url;
    }
    return asset.url;
  },
});

module.exports = {
  plugins: [
    postcssNested(),
    postcssCustomMedia({
      importFrom: `${__dirname}/src/common/components/media-queries/media-queries.css`,
    }),
    cssNano({
      preset: ['default'],
    }),
    // Plugin rule to re-write URLs prefixed with eds:// to be a CDN URL
    _rewriteCdnUrls,
  ],
  // The helper methods are not part of the public API so they are prefixed with an underscore
  _edsHelperMethods: { _rewriteCdnUrls },
};
